---
//TODO mechlist from outer file?
import MechCard from './MechCard.astro'

const mechList = {
	light: {
		COMMANDO: '',
		FIRESTARTER: '',
		FLEA: '',
		JAVELIN: '',
		JENNER: '',
		LOCUST: '',
		PANTHER: '',
		RAVEN: '',
		SPIDER: '',
		URBANMECH: '',
		WOLFHOUND: '',
	},
	medium: {
		ASSASSIN: '',
		BLACKJACK: '',
		CENTURION: '',
		CICADA: '',
		CRAB: '',
		DERVISH: 'HOTIS',
		ENFORCER: '',
		GRIFFIN: '',
		HATCHETMAN: 'ARMS',
		HUNCHBACK: '',
		KINTARO: '',
		'PHOENIX HAWK': '',
		'SHADOW HAWK': '',
		TREBUCHET: '',
		VINDICATOR: '',
		VULCAN: '',
		WOLVERINE: '',
	},
	heavy: {
		ARCHER: '',
		'BLACK KNIGHT': '',
		CATAPHRACT: '',
		CATAPULT: '',
		CHAMPION: 'HOTIS',
		CRUSADER: 'RAS',
		DRAGON: '',
		GRASSHOPPER: '',
		JAGERMECH: '',
		MARAUDER: '',
		ORION: '',
		QUICKDRAW: '',
		RIFLEMAN: '',
		THUNDERBOLT: '',
		WARHAMMER: '',
	},
	assault: {
		ANNIHILATOR: '',
		ATLAS: '',
		AWESOME: '',
		BANSHEE: '',
		BATTLEMASTER: '',
		CHARGER: 'HOTIS',
		CORSAIR: 'HOTIS',
		CYCLOPS: '',
		HIGHLANDER: '',
		'HATAMOTO-CHI': 'HOTIS',
		'KING CRAB': '',
		MAULER: '',
		'MARAUDER 2': 'HOTIS',
		NIGHTSTAR: '',
		STALKER: '',
		VICTOR: '',
		ZEUS: '',
	},
}
---

<div>
	<h3 class="text-2xl">Light mechs (20-35 tons)</h3>

	<div class="reelwrap">
		<div class="reel m-2">
			{
				Object.keys(mechList.light).map((mech) => {
					return <MechCard name={mech} dlc={mechList.light[mech]} />
				})
			}
		</div>
		<div class="left"></div>
		<div class="right"></div>
	</div>

	<h3 class="text-2xl">Medium mechs (40-55 tons)</h3>
	<div class="reelwrap">
		<div class="reel m-2">
			{
				Object.keys(mechList.medium).map((mech) => {
					return <MechCard name={mech} dlc={mechList.medium[mech]} />
				})
			}
		</div>
		<div class="left"></div>
		<div class="right"></div>
	</div>
	<h3 class="text-2xl">Heavy mechs (60-75 tons)</h3>
	<div class="reelwrap">
		<div class="reel m-2">
			{
				Object.keys(mechList.heavy).map((mech) => {
					return <MechCard name={mech} dlc={mechList.heavy[mech]} />
				})
			}
		</div>
		<div class="left"></div>
		<div class="right"></div>
	</div>
	<h3 class="text-2xl">Assault mechs (80-100 tons)</h3>
	<div class="reelwrap">
		<div class="reel m-2">
			{
				Object.keys(mechList.assault).map((mech) => {
					return <MechCard name={mech} dlc={mechList.assault[mech]} />
				})
			}
		</div>
		<div class="left"></div>
		<div class="right"></div>
	</div>
</div>

<style>
	h3 {
		text-align: center;
		text-shadow: white 0 0 2px, white 0 0 5px;
	}
	.reelwrap {
		position: relative;
	}
	.reel {
		height: 250px;
		overflow-x: auto;
		overflow-y: visible;
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: 10px;
		padding: 0px 25px;
	}
	.reelwrap .left {
		content: '';
		display: block;
		width: 0;
		height: 0;
		border-top: 15px solid transparent;
		border-bottom: 15px solid transparent;
		border-right: 15px solid rgba(0, 0, 0, 0.795);
		position: absolute;
		top: 50%;
		left: 10px;
		transform: translateY(-50%);
		z-index: 1;
		cursor: pointer;
	}
	.reelwrap .right {
		content: '';
		display: block;
		width: 0;
		height: 0;
		border-top: 15px solid transparent;
		border-bottom: 15px solid transparent;
		border-left: 15px solid rgba(0, 0, 0, 0.795);
		position: absolute;
		top: 50%;
		right: 10px;
		transform: translateY(-50%);
		z-index: 1;
		cursor: pointer;
	}
	.reel::-webkit-scrollbar {
		height: 10px;
	}
	.reel::-webkit-scrollbar-track {
		margin: 0 20px;
		background-color: transparent;
	}
	.reel::-webkit-scrollbar-thumb {
		background-color: rgba(0, 0, 0, 0.781);
		height: 5px;
		border-radius: 10px;
		box-shadow: 0 0 5px black;
	}
</style>
<script>
	const container = document.querySelectorAll('.reel')
	const wrap = document.querySelectorAll('.reelwrap')

	Array.from(container).forEach((el) => {
		el.addEventListener('wheel', function (event) {
			event.preventDefault()
			var delta = event.deltaX || event.deltaY
			el.scrollLeft += delta * 1.5
		})
	})
	Array.from(wrap).forEach((wrapper) => {
		const reel = wrapper.querySelector('.reel')
		const left = wrapper.querySelector('.left')
		const right = wrapper.querySelector('.right')
		left.addEventListener('click', () => {
			reel.scrollLeft -= 100
		})
		right.addEventListener('click', () => {
			reel.scrollLeft += 100
		})
	})
</script>
